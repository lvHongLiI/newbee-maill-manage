<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lvhongli.dao.SysMenuMapper">
    <resultMap id="base" type="com.lvhongli.entity.SysMenu">
     <result column="access_url" property="accessUrl"></result>
    </resultMap>
    <resultMap id="baseVo" type="com.lvhongli.pojo.MenuVo">
        <result column="access_url" property="accessUrl"></result>
        <association property="pName" column="pid" select="com.lvhongli.dao.SysMenuMapper.findByName" javaType="string"/>
    </resultMap>
    <resultMap id="baseAll" type="com.lvhongli.entity.SysMenu">
        <id column="id" property="id"></id>
        <result column="access_url" property="accessUrl"></result>
        <collection property="children" column="id" select="com.lvhongli.dao.SysMenuMapper.queryPid" ofType="com.lvhongli.entity.SysMenu"></collection>
    </resultMap>

    <delete id="deleteByIdOrPId" >
        delete  from sys_menu where
        <foreach collection="ids" item="id" open="id in(" close=")" separator=",">
            #{id}
        </foreach>
        <foreach collection="ids" item="id" open="or pid in(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>

    <select id="find" resultMap="base" >
        select * from sys_menu
        <where>
            <if test="name!=null and name!=''">
                name like concat(concat('%', #{name}), '%');
            </if>

            <if test="pId!=null ">
                pId =${pId}
            </if>

            <if test="accessUrl!=null and accessUrl!=''">
                name like concat(concat('%', #{accessUrl}), '%');
            </if>
        </where>
        order by sort
    </select>

    <select id="getLevelMenu" resultMap="baseVo" parameterType="int">
        select * from sys_menu where pid=#{pid} order by sort;
    </select>

    <select id="findByRoleIdExist" resultType="map">
        select id,name,pid, 0 as 'type' from sys_menu where id in (select menu_id from role_menu_link where role_id=#{id})
        union all
        select id,name,pid, 1 as 'type' from sys_menu where id not in (select menu_id from role_menu_link where role_id=#{id})
    </select>

    <select id="findNameByRid" resultType="string">
            select name  from sys_menu where id in (select menu_id from role_menu_link where role_id=#{id})
    </select>

    <select id="findAll" resultMap="base">
        select * from sys_menu order by sort
    </select>

    <select id="findByName" resultType="string">
        select name from sys_menu where id=#{id}
    </select>

    <select id="queryPid" resultMap="baseAll" parameterType="int">
        select * from sys_menu where pid=#{pid} order by sort
    </select>
</mapper>